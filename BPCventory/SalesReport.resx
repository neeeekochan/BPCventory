<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="user_icon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEYAAAA6CAYAAAANzi8+AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxMAAAsTAQCanBgAAAknSURBVHhe7Zt5rLXTFcavsdQ8
        VWrWmodURcWQmCtogxBDqDGGolQRYp7F+IeKMabGPM9DKmgRtAih1ZpFUbPWPH+e3z33+b513rvuue/e
        5/j4w5P8kpt17rvfd+2z373XWnufoQkTJnxPQm4crKYU04o5xapiL3GuuFv8Q7wk3hjhP+JJcY+4UOwn
        1hI/ErQxlRiYMt9NbuxfU4jpxHzit+JW8aqg8RpeE3eJP4hFxPSCDu9Lme8mN/anGcRq4gLxuogOmi/F
        Z+IT8bH4KICNz/if7Nr/iyvEBmImwZdQpcx3kxvr9EOxurhUREcMHfCW+Le4UZwujhD7iD1GYEQcJv4o
        rhG8am8KOixr8yaxrphRFCvz3eTGci0gjhdfifjgfPO8QneIIwVzDCOqrZhXfiEOEryOLwtGVLwHnCkW
        E0WjJ/Pd5Mb2+oFYW/xTxAf9VDwvzhAriEFpSXGieEo0RxGdtolg5LZS5rvJje00q2DVaM4FdMjJYkHx
        TWkucbh4WsR7w3GCz8dV5rvJjeOLpZc5Ij7QB+IG8XMxubSoYE57V8RnuUzMK3oq893kxt6iUy4W8UGY
        R/YXfS+hldpFvCDiMzEnzSPGVOa7yY1ji/eXZTg+wDOCd/vbFnPd4yI+2/ViDpEq893kxrF1rIg3/pcg
        ZvmuaBnxNxGfkSg7jZgz301uzLWViDd8VqwsBiEefOrOn31rCfGoiM9KfDRKme8mN47WTwWBlm/E378U
        tSJVIAfaXhDfENCdJo4ROwmCtp+IWi0vXhR+XsKHFUWXMt9NbuzWNIII0zcBHr5GOLu7uE2QPMY2I/8V
        dwrCgaVEjTYSMRjkFSOFmKjMd5Mbu7W5cOPwJ1GjXwsSwdhWGx4QW4gaEU/Ftn4vJirz3eTGSSIHiVEt
        SeGPRakoNWTZNbnQVYKQnij5csH80Awa3xHkVaWaTRAlux2eYeLzZ76b3DhJOwo3CnuLUtEpBH+xHQLB
        bQTpArUWUgvyIpbW5QSj9BIRr6Gzjhalao74Q8SwMt9NbuyIhOzvwg2Si5RmsUyilAncBu/8vqJn4DUi
        OmlnQUbu60lK6dASsdo9JtwGgeBwPpX5bnJjR6uIz4UbJLItEYWq+BrSKVuLUlF3eV+4nVdEq1woiDnK
        1wOjKPXd5MaOzhJu6H+CIV+iXYWvh4NFrQj5Y1skiiWi4seI9/WssqnvJjd2hl+ctMg7SsRooXbr65lQ
        S+owTREyUNNxe9SHZxclIgKO18+U+W5y49DQ4oL32Q3xjZVoWRGLVjWTdlObCrcHa4oSrSd8Lc+2Rua7
        yY1DQ9uNNADMDaT3JWIu8fWUNClg96tZBEVxt3ugKBHXxxr0YZnvJjd2wnM3wARaum1BEcnXk32zFA9C
        bKu43fMxFCoGmDdkvpvc2P0+E3OU6iTh6x/GMCDxLG6XwLBUcZ55OPPd5MZOROoGzsZQKBJDX8+uAJPn
        IBS/cTbkShXLJs9mvpvc2L20UXwuVZyjiHoHUf9lVWOn0u2yzVIqFgFf/2rmu8mN3dHmURgKRdrv64Hd
        yH5FEhpXOqLqUlEV8PVvZb6b3NjdMTXJGyE3hSy3cb/oZ9+ZWnKcX0gqSwNOFHO/qo4h7HYDbKTViB1G
        twGk/DXFcnK2LUXMuCls1WhP4TZey3w3ubE7aqUkUCOKQs8Jt0O+8ytRUsKkI1cSjBC3Q/Vw3K2RMRQX
        hecz301u7J79r8VQqY1F3DH8UDCcCbbGE5k8uw8xKKNEuZuoFSus23o0893kxu4EkpS9n/0ikkc6xO0B
        BSlCdL55djSZk4AOoySxhohOAJ1S+wpZtwu3d0vmu8mNnTqIG8ApNu37EZ3DvNXc9Gf7hVIpBSiGOQFY
        rJ0YUoFTRD9qLvfHZL6b3NjZn/lipAEoLQ5lOkDExLQtdGbtAhDFKIxtrpv5bnJjJ1KNEyc7erVi64UV
        6kERO7stOEHZgoCOrL9WMf9jMp81893kxo4Y4m6IuIa5oETUcZk8HxJux/B6sn2Cw38RNwuKR5zLe0RQ
        fnxPNK/j1dtBdG2DtBBfNKcw3A65YOq7yY0drSPinMB+UFsxiTJnxNIoMFfcIqj7ri8WEnSghQNsxnFv
        iuicqsr2n04Vc4u2IkyI19O5qe8mN3ZEpPqEcGOUD6ITY4mRFVc1oCZDNryZKN2KxamLBOXV2Cbn8NoU
        1QkQ7xO+ji2U4XAh893kxkmKkSIQg/QSJU0CwngNqQFRb79702znNk8zXC1mFr0UK3dwghhW5rvJjZPE
        hlV8N9kPxjaWqKr5f4ERxx71oMQ+FHlXvEev7J8lmjnL//u2WFgMK/Pd5MZu8T66YWB2z8TJhxjIMVI4
        WDhosTJFZ8mh2KfORALs/4NDxURlvpvc2C1eD1YON86DDO/LBBEZ/1X4f5hTmEC/KbFbybfv+7FaNTcD
        iVviDij5X9fKmvlucuNo/UzE0UAEGY9VsCz7MxhEQDaefifiPeOGPcV7Oit+PurYSua7yY25OKAcb8RE
        6IArFqkJDEtjnhpRYI+vFPtgiDpNHOHAuZtRynw3uTEXy15zxWEiZL8nZtA1JcdaxcITMRenvmJBC6gO
        DO9VN5X5bnLj2GJFat6YQz7+mw4iBZhcYmTG+zd/u8C8N2ask/lucmNvUSpgyzY+gCGqndyKqUuEE1Q9
        j6tlvpvcOL7onOb5FbhXDGLXsa0YDbHGYrCNe4Yv893kxnbiIDSrT3wgtnM5xs6RkTZVuloRQnCaggCy
        +ZuCc0SbVCH13eTG9iKyJKaJe8pA/MBDMxHPLwYlzsVwNJXdzWbuxD3prNYrYua7yY1lIrhbWjRPjAOx
        D2nElYITEzUTM9n2toJEkiU5HiIy1wmi7KIdz8x3kxvrRI2EQI9jqPGhgWgZhxhZzEPnCcoSJKkssYT0
        Gwq2SShvMNLI0CnKkw1zXC0rcjHBcn1V3JT5bnJjvRg9ZLuUFyg8UcCOjhjqNMxHzA+8AnQa8Dc2PmvW
        ciJ0Pjkc81j1Rl7mu8mN/YsOIqgilaDQTRUv5i2l0FlE2hTESVZpu5+dzWFlvpvcOFhRhyF8Z/lkJFEm
        4GQ44TzFL3YP/PNiXhuyckqefxZU6n4j+FkfRTLaKvp5Xy9lvpvU+D0Thr4GXOn+YyEo9eUAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>